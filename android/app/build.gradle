def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "org.nkn.mobile.app"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
        // javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl', 'src/main/kotlin']
            jniLibs.srcDirs = ['libs']
        }
        androidTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    compileOptions {
        encoding "UTF-8"
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources {
            excludes += ['META-INFTICE', 'META-INF/INDEX.LIST', 'META-INF/DEPENDENCIES', 'META-INF/DEPENDENCIES.txt', 'META-INF/dependencies.txt', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/LGPL2.1', 'META-INF/ASL2.0', 'META-INF/io.netty.versions.properties', 'META-INF/native-image/io.netty/codec-http/native-image.properties', 'META-INF/native-image/io.netty/common/native-image.properties', 'META-INF/native-image/io.netty/transport/native-image.properties', 'META-INF/native-image/io.netty/transport/reflection-config.json', 'META-INF/native-image/io.netty/buffer/native-image.properties', 'META-INF/native-image/io.netty/handler/native-image.properties']
        }
    }
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation'
    }
}

flutter {
    source '../..'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":golib")
    implementation "org.bouncycastle:bcprov-jdk15to18:1.68"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.20"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    // sentry
    implementation 'io.sentry:sentry-android:6.11.0'
    // local_notification
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    // google
    implementation 'com.google.firebase:firebase-messaging:23.1.1'
    // implementation('com.google.firebase:firebase-messaging:23.1.1') {
    //     exclude group: 'com.google.firebase', module: 'firebase-core'
    //     exclude group: 'com.google.firebase', module: 'firebase-analytics'
    //     exclude group: 'com.google.firebase', module: 'analytics'
    // }
    // implementation 'com.google.firebase:firebase-core:21.1.1'
    // implementation 'com.google.firebase:firebase-iid:21.1.0'
    // implementation "com.google.android.gms:play-services-base:18.1.0"
    // common
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    implementation "com.squareup.okhttp3:okhttp-tls:4.10.0"
    implementation "com.fasterxml.jackson.core:jackson-core:2.11.1"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.1"
}
apply plugin: 'com.google.gms.google-services'
